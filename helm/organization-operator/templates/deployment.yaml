apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "labels.common" . | nindent 8 }}
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "labels.selector" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      volumes:
      - name: {{ include "name" . }}-configmap
        configMap:
          name: {{ include "resource.default.name"  . }}
          items:
          - key: config.yml
            path: config.yml
      {{- if .Values.serviceMonitor.tls.enabled }}
      - name: metrics-certs
        secret:
          secretName: {{ .Values.serviceMonitor.tls.secretName }}
          optional: false
          items:
            - key: ca.crt
              path: ca.crt
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      {{- end }}
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        {{- with .Values.podSecurityContext }}
          {{- . | toYaml | nindent 8 }}
        {{- end}}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
        args:
        - --metrics-bind-address={{ .Values.ports.metrics }}
        {{- if .Values.serviceMonitor.tls.enabled }}
        - --metrics-secure=true
        - --metrics-cert-path=/tmp/k8s-metrics/metrics-certs
        {{- end }}
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        volumeMounts:
        - name: {{ include "name" . }}-configmap
          mountPath: /var/run/{{ include "name" . }}/configmap/
        {{- if .Values.serviceMonitor.tls.enabled }}
        - name: metrics-certs
          mountPath: /tmp/k8s-metrics/metrics-certs
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          {{- with .Values.securityContext }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 100m
            memory: 220Mi
